https://github.com/libexif/libexif/archive/refs/tags/libexif-0_6_14-release.tar.gz

https://github.com/libexif/exif/archive/refs/tags/exif-0_6_15-release.tar.gz

cheating with all the installation steps:

wget https://github.com/libexif/libexif/archive/refs/tags/libexif-0_6_14-release.tar.gz
tar -xzvf libexif-0_6_14-release.tar.gz

cd libexif-libexif-0_6_14-release/
sudo apt-get install autopoint libtool gettext libpopt-dev
autoreconf -fvi
./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_clean"
make -j4
make install
cd ..

wget https://github.com/libexif/exif/archive/refs/tags/exif-0_6_15-release.tar.gz
tar -xzvf exif-0_6_15-release.tar.gz

cd exif-exif-0_6_15-release/
autoreconf -fvi
./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_clean" PKG_CONFIG_PATH=$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_clean/lib/pkgconfig
make -j4
make install



found some sample data: https://github.com/ianare/exif-samples/archive/refs/heads/master.zip
put the sample images in a flat folder (`find */ -type f -exec bash -c 'file=${1#./}; mv "$file" "${file//\//_}"' _ '{}' \;`)


rebuild with afl

make clean
export LLVM_CONFIG="llvm-config-11"
CC=$HOME/repos/AFLplusplus/afl-clang-lto CXX=$HOME/repos/AFLplusplus/afl-clang-lto++ ./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl"
make -j4
make install

make clean
export LLVM_CONFIG="llvm-config-11"
CC=$HOME/repos/AFLplusplus/afl-clang-lto CXX=$HOME/repos/AFLplusplus/afl-clang-lto++ ./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl" PKG_CONFIG_PATH=$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl/lib/pkgconfig
make -j4
make install


afl-fuzz -i $HOME/projects/fuzzing-101-wip/fuzzing_libexif/exif-samples-master-flat/ \
-o $HOME/projects/fuzzing-101-wip/fuzzing_libexif/out \
-s 123 \
-- \
$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl/bin/exif \
@@ 


too many cases, some are too big (starting anyway im lazy)

gdb --eval-command=run --eval-command=bt --args install_afl/bin/exif out/default/crashes/id\:000000\,sig\:11\,src\:000235+000267\,time\:73593\,execs\:38668\,op\:splice\,rep\:16

000000,000001,000006
segfault on exif-utils.c:92

000002,000004,000005
segfault on exif-mnote-data-olympus.c:357

000003
segfault on exif-utils.c:94

000007,000010,000011
segfault on exif-data.c:292

000008,000009
exif-mnote-data-canon.c:224



# set up debugging in vscode
- put exif-exif-0_6_15-release/ as the root
- click run > debug 
- configure the following in launch.json:
```
"program": "${workspaceFolder}/../install_clean/bin/exif",
"args": ["/home/nils/projects/fuzzing-101-wip/fuzzing_libexif/out/default/crashes/id:000000,sig:11,src:000235+000267,time:73593,execs:38668,op:splice,rep:16"],
```
- quick and dirty re-build script:
```
#!/bin/bash
rm -rf install_clean

cd libexif-libexif-0_6_14-release
make clean
./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_clean"
make -j4
make install
cd ..

cd exif-exif-0_6_15-release/
make clean
./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_clean" PKG_CONFIG_PATH=$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_clean/lib/pkgconfig
make -j4
make install
```


# triaging id:000000
exif_get_short gets called with offset=0xfffffffe
offset is read twice from the buffer
pass exifloader's size and check it against the offset and the get operation:
```
offset = exif_get_long (d + 10, data->priv->order);
exif_log (data->priv->log, EXIF_LOG_CODE_DEBUG, "ExifData", 
    "IFD 0 at %i.", (int) offset);

/* Parse the actual exif data (usually offset 14 from start) */
exif_data_load_data_content (data, EXIF_IFD_0, d + 6, ds - 6, offset, 0);

/* IFD 1 offset */
if (offset + 6 + 2 > ds) {
  return;
}
if (offset >= max_size || ds + 6 + offset >= max_size) {
  exif_log (data->priv->log, EXIF_LOG_CODE_CORRUPT_DATA,
        "ExifData", "Offset beyond data size.");
  return;
}
n = exif_get_short (d + 6 + offset, data->priv->order);
if (offset + 6 + 2 + 12 * n + 4 > ds) {
  return;
}
if (offset >= max_size || ds + 6 + offset + 2 + 12 * n >= max_size) {
  exif_log (data->priv->log, EXIF_LOG_CODE_CORRUPT_DATA,
        "ExifData", "Offset beyond data size.");
  return;
}

```

also fixes all but 000010, 000011

# triaging id:000010
thumbnail_offset=0xfffffff4
thumbnail_length=0x100

exif_data_load_data_thumbnail (data, d,
              ds, thumbnail_offset,
              thumbnail_length);

add another offset max_size check in same function (not good enough for all cases)
```
if (offset >= max_size) { // not good enough for all cases, but enough for some
  exif_log (data->priv->log, EXIF_LOG_CODE_CORRUPT_DATA,
        "ExifData", "Offset beyond data size.");
  return;
}
/* Parse the actual exif data (usually offset 14 from start) */
exif_data_load_data_content (data, EXIF_IFD_0, d + 6, ds - 6, offset, 0);
```
and a hacky specific fixes

# triaging id:000011

add a slightly better ugly fix for id:000010, now it also covers id:000011




# Start another campaign

```
cd 
make clean
export LLVM_CONFIG="llvm-config-11"
CC=$HOME/repos/AFLplusplus/afl-clang-lto CXX=$HOME/repos/AFLplusplus/afl-clang-lto++ ./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl"
make -j4
make install

make clean
CC=$HOME/repos/AFLplusplus/afl-clang-lto CXX=$HOME/repos/AFLplusplus/afl-clang-lto++ ./configure --enable-shared=no --prefix="$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl" PKG_CONFIG_PATH=$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl/lib/pkgconfig
make -j4
make install
```

```
afl-fuzz -i $HOME/projects/fuzzing-101-wip/fuzzing_libexif/exif-samples-master-flat/ \
-o $HOME/projects/fuzzing-101-wip/fuzzing_libexif/out2 \
-s 123 \
-- \
$HOME/projects/fuzzing-101-wip/fuzzing_libexif/install_afl/bin/exif \
@@ 
```